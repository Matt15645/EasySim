apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: stock-management
  labels:
    app: api-gateway
    tier: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api-gateway
        tier: gateway
    spec:
      serviceAccountName: api-gateway-sa
      initContainers:
      - name: wait-for-services
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          for svc in auth-service:8081 account-service:8082 subscribe-service:8083 backtest-service:8084; do
            echo "Waiting for $svc..."
            until nc -z ${svc%:*} ${svc#*:}; do
              echo "Still waiting for $svc..."
              sleep 2
            done
            echo "$svc is ready"
          done
          echo "All services are ready"
      containers:
      - name: api-gateway
        image: matt15456/api-gateway:latest  # Docker Hub映像
        imagePullPolicy: Always  # 總是拉取最新映像
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: api-gateway-config
        - secretRef:
            name: api-gateway-secret
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: config-volume
          mountPath: /config
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: api-gateway-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      restartPolicy: Always
      dnsPolicy: ClusterFirst
