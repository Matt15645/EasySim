apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service                       # 部署名稱
  namespace: default                       # Kubernetes 命名空間
  labels:
    app: auth-service                      # 應用標籤，用於識別
    tier: backend                          # 層級標籤，標示為後端服務
spec:
  replicas: 2                              # 副本數量，指定運行 2 個 Pod
  selector:
    matchLabels:
      app: auth-service                    # 選擇器，指定管理哪些 Pod
  strategy:
    type: RollingUpdate                    # 更新策略：滾動更新
    rollingUpdate:
      maxSurge: 1                          # 更新時最多可以超過所需 Pod 數量的數量
      maxUnavailable: 0                    # 更新時允許不可用的 Pod 數量
  template:
    metadata:
      labels:
        app: auth-service                  # Pod 標籤，與選擇器匹配
        tier: backend
    spec:
      containers:
      - name: auth-service                 # 容器名稱
        image: your-registry/auth-service:latest  # 容器映像
        imagePullPolicy: Always            # 映像拉取策略：始終拉取最新
        ports:
        - containerPort: 8081              # 容器內部端口
          name: http                       # 端口名稱
        resources:                         # 資源限制
          limits:
            cpu: "1"                       # CPU 上限：1 核心
            memory: "1Gi"                  # 記憶體上限：1GB
          requests:
            cpu: "500m"                    # CPU 請求：0.5 核心
            memory: "512Mi"                # 記憶體請求：512MB
        livenessProbe:                     # 存活探針：檢查容器是否運行
          httpGet:
            path: /actuator/health/liveness # Spring Boot Actuator 健康檢查路徑
            port: 8081
          initialDelaySeconds: 60          # 初始延遲：容器啟動後等待時間
          periodSeconds: 10                # 檢查間隔
          timeoutSeconds: 5                # 探針超時時間
          failureThreshold: 3              # 失敗閾值：連續失敗次數觸發重啟
        readinessProbe:                    # 就緒探針：檢查是否可以接收流量
          httpGet:
            path: /actuator/health/readiness # Spring Boot Actuator 就緒檢查路徑
            port: 8081
          initialDelaySeconds: 30          # 初始延遲
          periodSeconds: 10                # 檢查間隔
          timeoutSeconds: 5                # 探針超時時間
          successThreshold: 1              # 成功閾值：連續成功次數標記為就緒
          failureThreshold: 3              # 失敗閾值：連續失敗次數標記為未就緒
        env:                               # 環境變數設置
        # 資料庫配置
        - name: SPRING_DATASOURCE_URL      # 資料庫 URL 環境變數
          valueFrom:
            configMapKeyRef:
              name: auth-service-configmap # 引用 ConfigMap
              key: DB_URL
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO # Hibernate DDL 自動設置
          valueFrom:
            configMapKeyRef:
              name: auth-service-configmap
              key: JPA_DDL_AUTO
        - name: SPRING_JPA_SHOW_SQL        # 是否顯示 SQL
          valueFrom:
            configMapKeyRef:
              name: auth-service-configmap
              key: JPA_SHOW_SQL
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL # 是否格式化 SQL
          valueFrom:
            configMapKeyRef:
              name: auth-service-configmap
              key: HIBERNATE_FORMAT_SQL
        - name: SERVER_PORT                # 應用端口
          valueFrom:
            configMapKeyRef:
              name: auth-service-configmap
              key: SERVER_PORT
        # 敏感配置
        - name: SPRING_DATASOURCE_USERNAME # 資料庫用戶名
          valueFrom:
            secretKeyRef:
              name: auth-service-secret    # 引用 Secret
              key: DB_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD # 資料庫密碼
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: DB_PASSWORD
        # 可選：JWT 密鑰（如果有使用）
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: JWT_SECRET
              optional: true               # 設為可選，如果不存在不會導致錯誤
      restartPolicy: Always                # 重啟策略：總是重啟